{"version":3,"sources":["app/logo/logo.png","app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/activitylist/ActivityListItemAttendee.tsx","features/activities/activitylist/ActivityItem.tsx","features/activities/activitylist/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/CustomTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/loadingComponent/LoadingComponent.tsx","app/common/form/CustomTextArea.tsx","app/common/form/CustomSelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/CustomDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","statusText","console","log","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","k","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","pagingParams","params","create","update","details","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowing","predicate","listUserActivities","Profile","displayName","image","ProfileFormValues","initialValue","bio","ActivityStore","activities","selectedActivity","editMode","loading","loadingInitial","filterParams","Map","set","setActivities","setLoadingInitial","setSelectedActivity","setLoading","setPagination","setPagingParams","setFilterParams","value","resetFilterParams","forEach","key","loadActivities","axiosParams","result","setActivity","refreshActivities","loadActivity","getActivity","find","userStore","isGoing","attendees","some","isHost","hostUsername","host","x","Date","setEditMode","createActivity","attendee","newaActivity","updateActivity","activityFormValues","updatedActivity","filter","deleteActivity","updateAttendance","runInAction","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","isFollowing","followersCount","makeAutoObservable","reaction","keys","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","split","ProfileStore","loadingProfile","uploading","updating","followings","loadingFollowings","userActivities","loadingUserActivities","setLoadingProfile","setProfile","setUploading","setLoadingUserActivities","setUpdating","setLoadingFollowings","setFollowings","setUserActivities","loadProfile","photo","photos","isMain","setImage","activityStore","profileFormValues","updatedValues","setUser","followingsCount","loadFollowings","loadUserActivities","UserStore","fbAcccessToken","fbLoading","setFbLoading","setFbAccessToken","credentials","setToken","modalStore","closeModal","logout","localStorage","removeItem","getUser","getFacebookLoginStatus","window","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","setComments","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","createdAt","comment","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","logo","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","length","substring","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","size","circular","ActivityItem","Segment","Group","Label","attached","textAlign","marginBottom","className","format","secondary","clearing","floated","groupedActivities","dates","sub","Math","random","ActivityFilters","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Fragment","Grid","Column","currentPage","itemsPerPage","totalItems","marginLeft","CustomTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","customError","onSubmit","setErrors","handleSubmit","isSubmitting","autoComplete","placeholder","type","render","marginBotton","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","Divider","LoadingComponent","CustomTextArea","CustomSelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","categoryOptions","CustomDateInput","selected","useHistory","useParams","initialState","c","nullable","enableReinitialize","newActivity","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","resetForm","Loader","onKeyPress","shiftKey","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","err","primary","NotFound","Inline","message","Modal","onClose","setEditForm","profileForm","setProfileForm","editForm","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","rotatable","onInitialized","cropper","files","revokeObjectURL","overflow","rotate","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handlesetMainPhoto","handelDeletePhoto","menuPosition","Statistic","finally","path","component","HomePage","isLoggedIn","Activitydashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","useLocation","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.a13ac220.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.efa8a277.png\";","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity{\r\n    id:string;\r\n    title:string;\r\n    date:Date|null;\r\n    description:string;\r\n    category:string;\r\n    city:string;\r\n    venue:string;   \r\n    hostUsername?:string;\r\n    isCancelled?:boolean;\r\n    isHost:boolean;\r\n    isGoing:boolean;\r\n    host?:Profile;\r\n    attendees:Profile[];\r\n}\r\n\r\nexport class Activity implements Activity{\r\n    constructor(init?:ActivityFormValues){\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues{\r\n    id?:string = undefined;\r\n    title:string = '';\r\n    category:string = '';\r\n    description:string = '';\r\n    date:Date|null = null;\r\n    city:string = '';\r\n    venue:string = '';\r\n\r\n\r\n    constructor(activity?:ActivityFormValues){\r\n        if(activity){\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.city = activity.city;\r\n            this.venue = activity.venue;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n        }\r\n    }\r\n}","export interface Pagination{\r\n    currentPage:number;\r\n    itemsPerPage:number;\r\n    totalItems:number;\r\n    totalPages:number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data:T;\r\n    pagination:Pagination;\r\n\r\n    constructor(data:T, pagination:Pagination){\r\n        this.data=data;\r\n        this.pagination=pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams{\r\n    pageNumber : number ;\r\n    pageSize : number ;\r\n\r\n    constructor( pageNumber=1, pageSize = 2){\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { history } from \"../../index\";\r\nimport { store } from \"../stores/store\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profile, ProfileFormValues, UserActivity } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config=>{\r\n  const token = store.commonStore.token;\r\n  if(token) config.headers.Authorization = `Bearer ${token}`\r\n  return config;\r\n})\r\n\r\naxios.interceptors.response.use(\r\n  async (response: AxiosResponse) => {\r\n   if(process.env.NODE_ENV === 'development'){\r\n    await new Promise((resolve) =>\r\n    setTimeout(() => {\r\n      resolve(response);\r\n    }, 1000)\r\n  );\r\n   }\r\n    const pagination = response.headers['pagination'];\r\n    if(pagination){\r\n      //response un datasına ona görə müdaxilə olunub bu cür qaytarılır ki, onsuz da data ancaq activity lərdən ibarət olacaq, we only add the spice - pagination inside\r\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, statusText, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        console.log(data);\r\n        if(typeof data==='string'){\r\n            toast.error(statusText);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const k in data.errors)\r\n            if (data.errors[k]) {\r\n              modalStateErrors.push(data.errors[k]);\r\n            }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(statusText);\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (pagingParams:URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\",{params:pagingParams}).then(responseBody), //this returns activities, meaning returns data, that is why get<Activities[]>\r\n  create: (activity: ActivityFormValues) => requests.post<void>(\"/activities\", activity), //this does not return anything other than the status code, that is why post<void>\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  attend:(id:string)=>requests.post<void>(`/activities/${id}/attend`,{})\r\n};\r\n\r\nconst Account={\r\n  current:()=> requests.get<User>('/account'),\r\n  login:(user:UserFormValues)=>requests.post<User>(\"/account/login\",user),\r\n  register:(user:UserFormValues)=>requests.post<User>(\"/account/register\", user),\r\n  fbLogin:(accessToken:string)=>requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`,{})\r\n}\r\n\r\nconst Profiles={\r\n  get:(username:string)=>requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto :(file:Blob) =>{\r\n    let formData = new FormData();\r\n    formData.append('File',file);\r\n    return axios.post<Photo>('photos', formData,{\r\n      headers:{'Content-type':'multipart/form-data'}\r\n    })\r\n  },\r\n  setMainPhoto:(id:string)=>requests.post<void>(`/photos/${id}/setMain`,{}),\r\n  deletePhoto:(id:string)=>requests.del<void>(`/photos/${id}`),\r\n  updateProfile:(profile:ProfileFormValues)=>requests.put<void>(`/profiles`,profile),\r\n  updateFollowing:(username:string)=>requests.post<void>(`/follow/${username}`,{}),\r\n  listFollowing:(username:string, predicate:string)=>requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listUserActivities:(username:string, predicate:string)=>requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles\r\n};\r\n\r\nexport default agent;\r\n\r\n//Sleep method v1\r\n// const sleep=(delay:number)=>(response:AxiosResponse)=>new Promise<AxiosResponse>(resolve=>setTimeout(() => {\r\n//   resolve(response)\r\n// }, delay))\r\n\r\n//Sleep method v2\r\n\r\n// const sleep =(delay:number)=>new Promise(resolve=>{\r\n//   setTimeout(resolve, delay)\r\n// });\r\n\r\n// ***********************************************************\r\n// Demo 1\r\n\r\n// const delay =()=> new Promise(resolve=>setTimeout(() => {\r\n//   resolve(showDemo(\"Hello\"))\r\n// }, 3000));\r\n\r\n// const fnc = async()=>{\r\n//   await delay();\r\n//   new Promise(resolve=>setTimeout(() => {\r\n//     resolve(console.log('Finished'));\r\n//   }, 3000))\r\n// };\r\n\r\n// fnc();\r\n\r\n// ***********************************************************\r\n\r\n//Demo 2\r\n\r\n// const delay =()=> new Promise(resolve=>setTimeout(() => {\r\n//   resolve(showDemo(\"Hello\"))\r\n// }, 3000));\r\n\r\n// delay().then(()=>new Promise(resolve=>setTimeout(() => {\r\n//   resolve(console.log('Finished'));\r\n// }, 3000)))\r\n\r\n// Demo 3\r\n\r\n// const sleep =(delay:number)=>new Promise(resolve=>{\r\n//   setTimeout(resolve, delay)\r\n// });\r\n\r\n// sleep(3000).then(()=>console.log(\"Həllou\"));\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile{\r\n    username:string;\r\n    displayName:string;\r\n    image?:string;\r\n    bio?:string;\r\n    photos?:Photo[];\r\n    followersCount:number;\r\n    followingsCount:number;\r\n    isFollowing:boolean\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user:User){\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\n\r\nexport interface Photo{\r\n    id:string;\r\n    url:string;\r\n    isMain:boolean;\r\n}\r\n\r\n\r\nexport class ProfileFormValues {\r\n    \r\n    displayName:string='';\r\n    bio?:string|undefined=undefined;\r\n    \r\n    constructor(initialValue?:ProfileFormValues){\r\n       if(initialValue){\r\n        this.bio=initialValue.bio;\r\n        this.displayName=initialValue.displayName;\r\n       }\r\n        \r\n    }\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  createdAt: Date;\r\n}","import { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n  activities: Activity[] = [];\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode: boolean = false;\r\n  loading: boolean = false;\r\n  loadingInitial: boolean = true;\r\n  pagination:Pagination|null= null;\r\n  pagingParams = new PagingParams();\r\n  filterParams = new Map().set('all',true);\r\n\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      ()=>this.filterParams.keys(),\r\n      ()=>{\r\n        this.setLoadingInitial(true);\r\n        this.setPagingParams(new PagingParams());\r\n        this.setActivities([]);\r\n        // this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setActivities = (activities: Activity[]) => (this.activities = activities);\r\n\r\n  setLoadingInitial = (loadingInitial: boolean) =>\r\n    (this.loadingInitial = loadingInitial);\r\n\r\n  setSelectedActivity = (activity: Activity | undefined) => {\r\n    this.selectedActivity = activity;\r\n  };\r\n  setLoading = (loading: boolean) => {\r\n    this.loading = loading;\r\n  };\r\n  setPagination = (pagination:Pagination) => {\r\n    this.pagination = pagination;\r\n  }\r\n  setPagingParams = (pagingParams:PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  }\r\n\r\n  setFilterParams= (filterParams:string, value:string|Date) => {\r\n    const resetFilterParams = () => {\r\n      this.filterParams.forEach((value, key)=>{\r\n        if(key!==\"startDate\") {\r\n          this.filterParams.delete(key);\r\n        }\r\n      })\r\n    }\r\n    \r\n    switch (filterParams) {\r\n      case \"all\":\r\n        resetFilterParams();\r\n        this.filterParams.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetFilterParams();\r\n        this.filterParams.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetFilterParams();\r\n        this.filterParams.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.filterParams.delete('startDate');\r\n        this.filterParams.set('startDate',value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  get axiosParams (){\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber',this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize',this.pagingParams.pageSize.toString());\r\n    this.filterParams.forEach((value, key)=>{\r\n      if(key===\"startDate\"){\r\n        params.append(key,(value as Date).toISOString());\r\n      }else{\r\n        params.append(key, value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    // this.setLoadingInitial(true);\r\n    console.log(true)\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams); // yes, result because we return the type paginatedResult here. We shall extract activities and pagination data from the result.\r\n      result.data.forEach((activity) => this.setActivity(activity));\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n \r\n  refreshActivities = () => {\r\n    this.setLoadingInitial(true);\r\n    this.setPagingParams(new PagingParams()); //for loading from the scratch\r\n    this.filterParams.forEach((value, key)=>{\r\n      this.filterParams.delete(key);\r\n    })\r\n    this.setActivities([]); //useEffect takes care of it in the ActivityDashboard.\r\n  }\r\n\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n\r\n    if (activity) {\r\n      this.setSelectedActivity(activity);\r\n      return activity;\r\n    } else {\r\n      this.setLoadingInitial(true);\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        this.setSelectedActivity(activity);\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private getActivity = (id: string)  => {\r\n    return this.activities.find((a) => a.id === id);\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n\r\n    activity.date = new Date(activity.date!);\r\n    this.setActivities([...this.activities, activity]);\r\n  };\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activities.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = activity.date!.toISOString().split(\"T\")[0];\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        //Here      date   =   activities of that date\r\n        //Output    2021-01-10 : [activities of that date]\r\n\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  setEditMode = (editMode: boolean) => {\r\n    this.editMode = editMode;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      \r\n      await agent.Activities.create(activity);\r\n\r\n      const newaActivity =  new Activity(activity);\r\n      newaActivity.attendees = [attendee];\r\n      newaActivity.host = attendee;\r\n      newaActivity.hostUsername  = user?.username;    \r\n\r\n      this.setActivity(newaActivity);\r\n      this.setSelectedActivity(newaActivity);\r\n    } catch (error) {\r\n\r\n      console.log(error);\r\n\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activityFormValues: ActivityFormValues) => {\r\n    this.setLoading(true);\r\n    try {\r\n      await agent.Activities.update(activityFormValues);\r\n      if(activityFormValues.id){\r\n        let updatedActivity ={...this.getActivity(activityFormValues.id),...activityFormValues};\r\n         this.setActivities([...this.activities.filter(x=>x.id!==activityFormValues.id),updatedActivity as Activity]); // we are casting the updatedActivity as Activity here, as it can not be detected automaticaly by ts.\r\n         this.setSelectedActivity(updatedActivity as Activity);\r\n\r\n      }\r\n    } catch (error) {\r\n     \r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.setLoading(true);\r\n    await agent.Activities.delete(id);\r\n    this.setActivities([...this.activities.filter((a) => a.id !== id)]);\r\n    this.setLoading(false);\r\n    if (this.selectedActivity?.id === id) {\r\n      this.setSelectedActivity(undefined);\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.setLoading(true);\r\n    try {\r\n\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n     runInAction(()=>{\r\n      if(this.selectedActivity?.isGoing){\r\n        this.selectedActivity.attendees  = this.selectedActivity.attendees?.filter(a=>a.username !== user?.username);\r\n        this.selectedActivity.isGoing =false;\r\n      }else{\r\n        const attendee: Partial<Profile> = {\r\n          displayName: user?.displayName!,\r\n          username: user?.username!,\r\n          image: user?.image,\r\n\r\n        };\r\n        this.selectedActivity?.attendees?.push(attendee as Profile);\r\n        this.selectedActivity!.isGoing=true;\r\n      }\r\n      this.setActivities([...this.activities.filter(a=>a.id!==this.selectedActivity?.id),this.selectedActivity!]);\r\n     })\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  cancelActivityToggle=async() => {\r\n\r\n    this.setLoading(true);\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(()=>{\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.setActivities([...this.activities.filter(x=>x.id!==this.selectedActivity!.id),this.selectedActivity!]);\r\n        this.setLoading(false);\r\n      })\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }finally{\r\n      this.setLoading(false);\r\n    }\r\n  }\r\n\r\n  clearSelectedActivity =() => { //for clearing out the activity when we leave that page, so signalr will not be throwing an error.\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username:string)=>{  //for attendees in the list of activities\r\n    this.activities.forEach(activity=>{\r\n      activity.attendees.forEach(attendee=>{\r\n        if(attendee.username===username){\r\n          attendee.isFollowing?attendee.followersCount--:attendee.followersCount++;\r\n          attendee.isFollowing=!attendee.isFollowing;\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { toast } from \"react-toastify\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, ProfileFormValues, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading: boolean = false;\r\n  loading: boolean = false;\r\n  updating:boolean=false;\r\n  followings:Profile[] =[]; //can either be followers or the people you follow, does not matter\r\n  loadingFollowings:boolean= false;\r\n  userActivities :UserActivity[]=[];\r\n  loadingUserActivities:boolean = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setLoadingProfile = (loading: boolean) => {\r\n    this.loadingProfile = loading;\r\n  };\r\n\r\n  setProfile = (profile: Profile | null) => {\r\n    this.profile = profile;\r\n  };\r\n\r\n  setUploading = (uploading: boolean) => {\r\n    this.uploading = uploading;\r\n  };\r\n\r\n  setLoading = (loading: boolean) => {\r\n    this.loading = loading;\r\n  };\r\n\r\n  setLoadingUserActivities = (loadingUserActivities: boolean) => {\r\n    this.loadingUserActivities = loadingUserActivities;\r\n  };\r\n\r\n  setUpdating = (updating: boolean) => {\r\n    this.updating = updating;\r\n  };\r\n\r\n  setLoadingFollowings = (loadingFollowings: boolean) => {\r\n    this.loadingFollowings = loadingFollowings;\r\n  };\r\n  setFollowings = (followings: Profile[]) => {\r\n    this.followings = followings;\r\n  };\r\n  \r\n  setUserActivities = (userActivities: UserActivity[]) => {\r\n    this.userActivities = userActivities;\r\n  };\r\n  loadProfile = async (username: string) => {\r\n    this.setLoadingProfile(true);\r\n    try {\r\n      const profile: Profile = await agent.Profiles.get(username);\r\n      this.setProfile(profile);\r\n      this.setLoadingProfile(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.setUploading(true);\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.setUploading(false);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setUploading(false);\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.setLoading(true);\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((x) => x.isMain)!.isMain = false;\r\n          this.profile.photos.find((x) => x.id === photo.id)!.isMain = true;\r\n\r\n          this.profile.image = photo.url;\r\n          this.setLoading(false);\r\n          store.activityStore.loadActivities();\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    if (photo.isMain) {\r\n      toast.error(\"You can not delete the Main photo\");\r\n      return;\r\n    } else {\r\n      this.setLoading(true);\r\n      try {\r\n        await agent.Profiles.deletePhoto(photo.id);\r\n        runInAction(() => {\r\n          if (this.profile && this.profile.photos) {\r\n            this.profile.photos = this.profile.photos.filter(\r\n              (x) => x.id !== photo.id\r\n            );\r\n            this.setLoading(false);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profileFormValues:ProfileFormValues)=>{\r\n      if(store.userStore.user&&this.profile&&this.profile?.username===store.userStore.user.username){\r\n        this.setUpdating(true);\r\n        try {\r\n          await agent.Profiles.updateProfile(profileFormValues);\r\n          const updatedValues={\r\n            bio:profileFormValues.bio,\r\n           displayName: profileFormValues.displayName\r\n          }\r\n          \r\n          store.userStore.setUser({...store.userStore.user,displayName:profileFormValues.displayName})\r\n          this.setProfile({...this.profile,...updatedValues} as Profile)\r\n          this.setUpdating(false);\r\n          store.activityStore.loadActivities();\r\n          \r\n\r\n        } catch (error) {\r\n          console.log(error);\r\n          this.setUpdating(false);\r\n        }\r\n        \r\n      }\r\n      else{\r\n       toast.error(\"You can not edit this profile\")\r\n      }\r\n  }\r\n\r\n\r\n\r\n  \r\n  updateFollowing = async(username:string,isFollowing:boolean)=>{\r\n    this.loading=true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n     runInAction(()=>{\r\n      if(this.profile && this.profile.username!==store.userStore.user?.username && this.profile.username===username) //when visiting the user profile\r\n      {\r\n        // isFollowing?this.profile.followersCount++:this.profile.followersCount--; // Neils's method, remove the line below\r\n        this.profile.isFollowing?this.profile.followersCount--:this.profile.followersCount++;\r\n        this.profile.isFollowing=!this.profile.isFollowing;\r\n      }\r\n\r\n      this.followings.forEach(profile=>{ //for updating the users in the followers tab\r\n        if(profile.username===username){\r\n          profile.isFollowing? profile.followersCount -- :profile.followersCount++\r\n          profile.isFollowing =!profile.isFollowing;\r\n        }\r\n      })\r\n      \r\n      if(this.profile&&this.profile.username===store.userStore.user?.username)\r\n      {\r\n        this.followings.forEach(profile=>{ //for updating the users in the following tab\r\n          if(profile.username===username){\r\n            profile.isFollowing? this.profile!.followingsCount ++ :this.profile!.followingsCount--\r\n            // profile.isFollowing =!profile.isFollowing;\r\n          }\r\n        })\r\n      }\r\n\r\n      this.setLoading(false);\r\n     })\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoading(false);\r\n    }\r\n  }\r\n\r\n  loadFollowings = async (predicate:string) => {\r\n    this.setLoadingFollowings(true);\r\n\r\n    try {\r\n      const followings= await agent.Profiles.listFollowing(this.profile!.username,predicate);\r\n\r\n      this.setFollowings(followings);\r\n\r\n      this.setLoadingFollowings(false);\r\n    } catch (error) {\r\n        console.log(error)\r\n      this.setLoadingFollowings(false);\r\n\r\n    }\r\n  }\r\n\r\n    loadUserActivities = async (username:string, predicate?:string)=>{\r\n        this.setLoadingUserActivities(true);\r\n        try {\r\n          const userActivities = await agent.Profiles.listUserActivities(username,predicate!);\r\n          this.setUserActivities(userActivities);\r\n          this.setLoadingUserActivities(false);\r\n\r\n        } catch (error) {\r\n          console.log(error);\r\n          this.setLoadingUserActivities(false);\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport agent from \"../api/agent\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAcccessToken:string|null = null;\r\n  fbLoading:boolean=false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user; //if the user is not null in return true, else false\r\n  }\r\n\r\n  setUser = (user: User | null) => (this.user = user);\r\n  setFbLoading = (fbLoading :boolean) => (this.fbLoading = fbLoading);\r\n  setFbAccessToken = (token :string) => (this.fbAcccessToken = token);\r\n  register = async (credentials: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(credentials);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n      store.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  login = async (credentials: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(credentials);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n      store.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.token = null;\r\n    localStorage.removeItem(\"jwt\");\r\n    this.setUser(null);\r\n    store.activityStore.setActivities([]);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      this.setUser(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) {\r\n      return (this.user.image = image);\r\n    }\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus(response=>{\r\n      console.log(response);\r\n      if(response.status==='connected'){\r\n        this.setFbAccessToken(response.authResponse.accessToken);\r\n      }\r\n    })\r\n  }\r\n\r\n  facebookLogin = () => {\r\n    this.setFbLoading(true);\r\n\r\n    const apiLogin = (accessToken:string) => {\r\n      agent.Account.fbLogin(accessToken).then((user:User)=>{\r\n        store.commonStore.setToken(user.token);\r\n        this.setUser(user);\r\n        this.setFbLoading(false);\r\n        history.push('/activities');\r\n      }).catch(error=>{\r\n        console.log(error)\r\n        this.setFbLoading(false);\r\n      });\r\n    }\r\n\r\n\r\n    if(this.fbAcccessToken){\r\n      apiLogin(this.fbAcccessToken);\r\n    }else{\r\n      window.FB.login(response=>{\r\n        apiLogin(response.authResponse.accessToken)\r\n      },{scope:'public_profile,email'})\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store{\r\n    activityStore:ActivityStore;\r\n    commonStore:CommonStore;\r\n    userStore:UserStore;\r\n    modalStore:ModalStore;\r\n    profileStore:ProfileStore;\r\n    commentStore:CommentStore;\r\n}\r\n\r\nexport const store:Store={\r\n    activityStore:new ActivityStore(),\r\n    commonStore:new CommonStore(),\r\n    userStore:new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore:new ProfileStore(),\r\n    commentStore:new CommentStore(),\r\n\r\n\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded: boolean = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => {\r\n        console.log('token yoxlanılır')  \r\n        return this.token},\r\n      (token) => {\r\n        if (token) {\r\n          //user login olanda token save olunur, və burda biz login olandaki tokeni\r\n          // götürüb, localstorage-ə set eliyiriy. Əks halda localstorage -də login olanda\r\n          // token olmayacaq, çünki userStore-da eləbir metod təyin eləməmişik ki\r\n          // tokeni götürüb localda saxlasın. Token i app memory ə də net core yox,\r\n          // biz set eliyiriy.\r\n          window.localStorage.setItem(\"jwt\", token);\r\n          console.log('[tokendə dəyişiklik getdi], token var',token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n          console.log('[tokendə dəyişiklik getdi], token yoxdu',token);\r\n\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => (this.error = error);\r\n\r\n  setToken = (token: string) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal{\r\n    open:boolean,\r\n    body:JSX.Element|null\r\n}\r\n\r\n\r\nexport default class ModalStore {\r\n   \r\n \r\n    modal:Modal={\r\n        open:false,\r\n        body:null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content:JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body= content;\r\n    }\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body= null;\r\n    }\r\n}","import { ChatComment } from \"../models/comment\";\r\nimport {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\"\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  setComments = (comments: ChatComment[]) => {\r\n    this.comments = comments;\r\n  };\r\n  \r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection\", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n\r\n        comments.forEach(x=>x.createdAt=new Date(x.createdAt+\"Z\"))\r\n        this.setComments(comments);\r\n      });\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        comment.createdAt = new Date(comment.createdAt);\r\n        this.setComments([...this.comments,comment]);\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping the connection\", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.setComments([]);\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values:any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n        await this.hubConnection?.invoke(\"SendComment\", values)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }   \r\n  }\r\n}\r\n\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport logo from '../logo/logo.png';\r\nimport { useStore } from '../stores/store';\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    const {userStore} = useStore();\r\n    const {user,logout} = userStore;\r\n\r\n    return (\r\n     <Menu inverted fixed='top'>\r\n         <Container>\r\n             <Menu.Item as={NavLink} exact to='/' header>\r\n                 <img src={logo} alt='logo' style={{marginRight:'10px'}} />\r\n                 Reactivities\r\n             </Menu.Item>\r\n             <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n             <Menu.Item as={NavLink} to='/errorHandling' name='Errors' />\r\n             <Menu.Item>\r\n                 <Button positive content='Create Activity' as={NavLink} to='/createActivity'  />\r\n             </Menu.Item>\r\n           {user?  <Menu.Item position='right'>\r\n                <Image src={user?.image|| '/assets/user.png'} avatar spaced ='right' />\r\n                <Dropdown pointing='top left' text={user?.displayName}>\r\n                  <Dropdown.Menu>\r\n                  <Dropdown.Item as={Link}  to={`/profiles/${user?.username}`} text = 'My Profile' icon='user' /> \r\n                    <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n             </Menu.Item>:null}\r\n         </Container>\r\n     </Menu>\r\n    )\r\n}\r\n\r\nexport default observer(Navbar);","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nfunction FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  const handleFollow = (e: SyntheticEvent, username: string) => {\r\n    e.preventDefault();\r\n    profile.isFollowing\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  };\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.isFollowing ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.isFollowing?\"red\":\"green\"}\r\n          content={profile.isFollowing ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={e=>handleFollow(e,profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n}\r\n\r\n\r\nexport default observer(FollowButton);","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props{\r\n    profile:Profile\r\n}\r\n\r\n\r\n\r\n function ProfileCard({profile}:Props) {\r\n\r\n\r\n  \r\n\r\n    return (\r\n      <Card as={Link} to={`/profiles/${profile.username}`}>\r\n        <Image src={profile.image || \"/assets/user.png\"} />\r\n        <Card.Content>\r\n          <Card.Header>{profile.displayName}</Card.Header>\r\n          <Card.Description content={profile.bio?(profile.bio.length>25?profile.bio?.substring(0,37)+\"...\":profile.bio):undefined}/>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n            <Icon name='user'/>\r\n            {profile.followersCount} followers\r\n        </Card.Content>\r\n        <FollowButton profile={profile} /> \r\n\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default observer(ProfileCard);","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props{\r\n    attendees : Profile[];\r\n}\r\n\r\nfunction ActivityListItemAttendee({attendees}:Props) {\r\n\r\n    const styles ={\r\n        borderColor:'orange',\r\n        borderWidth:3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n          {attendees.map(attendee=>\r\n           (\r\n            <Popup hoverable key={attendee.username} trigger={\r\n                <List.Item  as={Link} to={`/profiles/${attendee.username}`} >\r\n                <Image\r\n                \r\n                bordered\r\n                style={attendee.isFollowing?styles:null}\r\n                \r\n                size='mini' circular src={attendee.image||'/assets/user.png'}/>\r\n            </List.Item>\r\n           }>\r\n               <Popup.Content>\r\n                   <ProfileCard profile={attendee} />\r\n               </Popup.Content>\r\n\r\n           </Popup>\r\n          ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityListItemAttendee);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Segment, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns';\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityItem({ activity }: Props) {\r\n \r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled&&\r\n          <Label attached='top' color='red' content='Cancelled' style={{textAlign:'center'}}  />\r\n        }\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image circular size=\"tiny\" style={{marginBottom:5}} src={activity.host?.image||\"/assets/user.png\"} />\r\n            <Item.Content className=\"activityItemHeader\">\r\n              <Item.Header\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                content={activity.title}\r\n              />\r\n              <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n              {activity.isHost&&(\r\n                <Item.Description>\r\n                  <Label basic color='orange' content='You are hosting the activity'/>\r\n                </Item.Description>\r\n              )}\r\n                {activity.isGoing&& !activity.isHost &&(\r\n                <Item.Description>\r\n                  <Label basic color='green' content='You are going to the activity'/>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n          <span>\r\n              <Icon name=\"clock\"/>{format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n              <Icon name=\"marker\"/>{activity.venue}\r\n          </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n       <ActivityListItemAttendee attendees={activity.attendees!}/>\r\n      </Segment>\r\n      <Segment clearing>\r\n          <span>{activity.description}</span>\r\n          <Button as={Link} to={`/activities/${activity.id}`}\r\n            color='teal'\r\n            floated='right'\r\n            content='View'\r\n          />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Header} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityItem from \"./ActivityItem\";\r\n\r\nfunction ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([dates, activities]) => (\r\n        <Fragment key={dates}>\r\n          <Header sub color=\"teal\">\r\n            {dates}\r\n          </Header>\r\n          {activities.map((activity: Activity) => (\r\n            <ActivityItem key={activity.id+Math.random()} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityList);\r\n","import React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nexport default function ActivityFilters() {\r\n  const {activityStore:{filterParams,setFilterParams}} = useStore();\r\n    return (\r\n      <>\r\n      \r\n        <Menu vertical size='large'  style={{width:'100%',marginTop:116}} >\r\n            <Header icon='filter' attached color='teal' content='Filters' />\r\n            <Menu.Item\r\n            active={filterParams.has('all')}\r\n            onClick={()=>setFilterParams('all','true')} \r\n            content='All Activities'\r\n            />\r\n            <Menu.Item content=\"I'm going\"\r\n            active={filterParams.has('isGoing')}\r\n            onClick={()=>setFilterParams('isGoing','true')} \r\n            />\r\n            <Menu.Item content=\"I'm hosting\"\r\n                  active={filterParams.has('isHost')}\r\n                  onClick={()=>setFilterParams('isHost','true')} \r\n            />\r\n        </Menu>\r\n        <Header />\r\n        <Calendar \r\n          onChange={(value)=>setFilterParams('startDate',value as Date )}\r\n          value={filterParams.get('startDate')|| new Date()}\r\n        />\r\n      </>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 55 }}>\r\n\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid } from \"semantic-ui-react\";\r\nimport ActivityList from \"../activitylist/ActivityList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport ActivityListItemPlaceholder from \"./ActivityItemPlaceholder\";\r\n\r\n\r\n\r\nconst Activitydashboard = () => {\r\n  const { activityStore,userStore,commentStore } = useStore();\r\n\r\n  const {activities ,loadActivities,refreshActivities,loadingInitial, setPagingParams, pagination} = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState<boolean>(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage+1))\r\n    loadActivities().then(()=>setLoadingNext(false))\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n   if(activities.length===0){\r\n   loadActivities();\r\n   }\r\n\r\n  }, [loadActivities,activities,commentStore]);\r\n\r\n  \r\n  return (\r\n   <React.Fragment>\r\n     {userStore.user?\r\n      <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {loadingInitial && (\r\n          <>\r\n        <Button style={{marginBottom:25  }} content='Refresh activities' disabled/>\r\n\r\n          <ActivityListItemPlaceholder />\r\n          <ActivityListItemPlaceholder />\r\n          </>\r\n        )}\r\n        <Button style={{marginBottom:25  }} content='Refresh activities' onClick={()=>refreshActivities()}/>\r\n      {activities.length>0 ? (\r\n      <>\r\n      <ActivityList/>\r\n        {pagination? <Button content=\"Load More\" fluid  animated onClick={()=>handleGetNext()} loading={loadingNext} disabled={pagination.currentPage*pagination.itemsPerPage===pagination.totalItems}/>:null}\r\n      </>\r\n        ) : (\r\n          <h1 style={{ textAlign: \"center\", marginLeft: 400 }}>\r\n            No Activities\r\n          </h1>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\" >\r\n      <ActivityFilters/>\r\n      </Grid.Column>\r\n    </Grid>:<Redirect to='/'/>}\r\n     \r\n   </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(Activitydashboard);\r\n","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    label?:string;\r\n    type?:string\r\n}\r\n\r\nexport default function CustomTextInput(props:Props) {\r\n  const [field, meta] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red' style={{marginTop:10}} content={meta.error} />\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Label,Header } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../app/common/form/CustomTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nfunction LoginForm() {\r\n\r\n  const {userStore} = useStore();\r\n\r\n  return <Formik \r\n  initialValues={{email:'',password:'',customError:''}}\r\n  onSubmit={(values, {setErrors})=>userStore.login(values)\r\n  .catch(error=>setErrors({customError:'Invalid email or password'}))}\r\n  >\r\n      {({handleSubmit,isSubmitting,errors}) =>(\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n            <Header content='Login To Reactivities' as='h2'color='teal' textAlign='center' />\r\n             <CustomTextInput  name='email' placeholder='Email'/>    \r\n             <CustomTextInput  name='password' placeholder='Password' type='password'/>    \r\n             <ErrorMessage name='error' render={()=><Label style={{marginBotton:10}} basic color='red' content={errors.customError} />} />\r\n             <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\r\n          </Form>\r\n      )}\r\n  </Formik>;\r\n}\r\n\r\nexport default observer(LoginForm);","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\n\r\ninterface Props{\r\n    errors:any\r\n}\r\n\r\nexport default function ValidationErrors({errors}:Props) {\r\n    return (\r\n        <Message error>\r\n            {errors &&\r\n            <Message.List>\r\n                {errors.map((error:string,i:number)=>(\r\n                    <Message.Item key={i}>\r\n                        {error}\r\n                    </Message.Item>\r\n                ))}\r\n                </Message.List>}\r\n        </Message>\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { Button,Header } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../app/common/form/CustomTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup'; \r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\n\r\nfunction RegisterForm() {\r\n\r\nconst {userStore} = useStore();\r\n\r\n// Yup.setLocale({\r\n//   displayName: \"Name field is required\",\r\n//   username: \"Username is required\",\r\n//   email: \"Email is required\",\r\n//   password: \"Password is required\",\r\n// })\r\n\r\nreturn (\r\n  <Formik\r\n    initialValues={{\r\n      displayName: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      error: null,\r\n    }}\r\n    onSubmit={(values, { setErrors }) =>\r\n      userStore.register(values).catch((error) => {\r\n        console.log(error);\r\n        setErrors({ error });\r\n      })\r\n    }\r\n    validationSchema={Yup.object({\r\n      displayName: Yup.string().required(\"Name field is required\"),\r\n      username: Yup.string().required(\"Username is required\"),\r\n      email: Yup.string().required(\"Email is required\").email(field=>`${field.value} is not a valid email`),\r\n      password: Yup.string().required(\"Password is required\"),\r\n    })}\r\n  >\r\n    {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n      <Form\r\n        className=\"ui form error\"\r\n        onSubmit={handleSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Header\r\n          content=\"Sign Up To Reactivities\"\r\n          as=\"h2\"\r\n          color=\"teal\"\r\n          textAlign=\"center\"\r\n        />\r\n        <CustomTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n        <CustomTextInput name=\"username\" placeholder=\"Username\" />\r\n        <CustomTextInput name=\"email\" placeholder=\"Email\" />\r\n        <CustomTextInput\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n        />\r\n        {/* {errors.customError?<ValidationErrors errors={errors.customError}/>:null}     */}\r\n        <ErrorMessage\r\n          name=\"error\"\r\n          render={() => <ValidationErrors errors={errors.error} />}\r\n        />\r\n        <Button\r\n          disabled={!isValid || !dirty || isSubmitting}\r\n          loading={isSubmitting}\r\n          positive\r\n          content=\"Register\"\r\n          type=\"submit\"\r\n          fluid\r\n        />\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n);\r\n}\r\n\r\nexport default observer(RegisterForm);","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Container, Header, Segment,Image, Button, Divider } from \"semantic-ui-react\";\r\nimport logo from '../../app/logo/logo.png';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\n\r\nfunction HomePage() {\r\n\r\n  const {userStore, modalStore} = useStore();\r\n\r\n  return <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container>\r\n          <Header as='h1' inverted>\r\n               <Image size='massive' src={logo} alt='logo' style={{marginBottom:12}} />\r\n               Reactivities\r\n          </Header>\r\n          {\r\n            userStore.user? \r\n            <> \r\n             <Header as='h2' inverted content='Welcome to Reactivities' />\r\n             <Button as={Link} to='/activities' size='huge' inverted content='Continue To Activities' />\r\n            </>:\r\n          <>\r\n            <Button onClick={()=>modalStore.openModal(<LoginForm/>)} size='huge' inverted content='Login' />\r\n            <Button onClick={()=>modalStore.openModal(<RegisterForm/>)} size='huge' inverted content='Register' />\r\n            <Divider horizontal inverted content='Or'/>\r\n            <Button\r\n            size='huge'\r\n            inverted\r\n            color='facebook'\r\n            content='Login with Facebook'\r\n            onClick={userStore.facebookLogin}\r\n            loading={userStore.fbLoading}\r\n            />\r\n          </>\r\n          }\r\n      </Container>\r\n  </Segment>;\r\n}\r\n\r\nexport default observer(HomePage);","import React from \"react\";\r\nexport default function LoadingComponent() {\r\n  return (\r\n    <div className=\"loadingContainer\">\r\n      <div className=\"spinner-box\">\r\n        <div className=\"pulse-container\">\r\n          <div className=\"pulse-bubble pulse-bubble-1\"></div>\r\n          <div className=\"pulse-bubble pulse-bubble-2\"></div>\r\n          <div className=\"pulse-bubble pulse-bubble-3\"></div>\r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n\r\n  );\r\n}\r\n","import {  useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form,Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    label?:string;\r\n    type?:string;\r\n    rows?:number;\r\n}\r\n\r\nexport default function CustomTextArea(props:Props) {\r\n  const [field, meta] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red' content={meta.error} />\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    label?:string;\r\n    options:any\r\n}\r\n\r\nexport default function CustomSelectInput(props:Props) {\r\n  const [field, meta,helpers] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value||null}\r\n                onChange={(event,data)=>helpers.setValue(data.value) }\r\n                onBlur={()=>helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red' content={meta.error} />\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","export const categoryOptions =[\r\n    {text:'Drinks',value:'drinks'},\r\n    {text:'Culture',value:'culture'},\r\n    {text:'Film',value:'film'},\r\n    {text:'Food',value:'food'},\r\n    {text:'Music',value:'music'},\r\n    {text:'Travel',value:'travel'},\r\n]","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport DatePicker,{ReactDatePickerProps} from 'react-datepicker';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\nexport default function CustomDateInput(props:Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n           <DatePicker {...field} {...props} selected={(field.value&& new Date(field.value))||null}\r\n            onChange={value=> helpers.setValue(value)}\r\n           />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red' content={meta.error} />\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Segment,Button, Header,} from \"semantic-ui-react\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport {observer} from 'mobx-react-lite'\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../../app/layout/loadingComponent/LoadingComponent\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport CustomTextInput from \"../../../app/common/form/CustomTextInput\";\r\nimport CustomTextArea from \"../../../app/common/form/CustomTextArea\";\r\nimport CustomSelectInput from \"../../../app/common/form/CustomSelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport CustomDateInput from \"../../../app/common/form/CustomDateInput\";\r\n\r\n\r\n function ActivityForm() {\r\n\r\n  const history = useHistory();\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const {activityStore} = useStore();\r\n\r\n  const {createActivity,updateActivity,loadActivity,loadingInitial,setLoadingInitial} = activityStore;\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n  \r\n \r\n  useEffect(() => {\r\n    setLoadingInitial(false);\r\n    if (id) {\r\n     loadActivity(id).then(activity=>setActivity(new ActivityFormValues(activity)));\r\n    }\r\n\r\n    const initialState = new ActivityFormValues();\r\n\r\n    return setActivity(initialState);\r\n  }, [id,loadActivity,setLoadingInitial]);\r\n\r\n  \r\n  const validationRequired = () => {\r\n    const keys = Object.keys(new ActivityFormValues());\r\n    const updatedKeys = keys.filter((c) => c !== \"id\");\r\n\r\n    return updatedKeys.reduce((keys, key) => {\r\n      keys[key] = key ==='date'?Yup.date().nullable().required(`The ${key} is required`):Yup.string().required(`The ${key} is required`);\r\n      return keys;\r\n    }, {} as any);\r\n  };\r\n\r\n\r\n\r\n  const validationSchema = Yup.object(validationRequired());\r\n\r\n\r\n\r\n\r\n  const handleFormSubmit = (activity:ActivityFormValues) => {\r\n    if(!activity.id){\r\n      let newActivity:ActivityFormValues = {...activity,id: uuid()} //We create the uuid here, so we can redirect to the id, because otherwise we cannot access that id.\r\n      createActivity(newActivity).then(()=>history.push(`/activities/${newActivity.id}`))\r\n    }else{\r\n      updateActivity(activity).then(()=>history.push(`/activities/${activity.id}`))\r\n\r\n    }\r\n  }\r\n\r\n  if(loadingInitial) return <LoadingComponent/>\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content='Activity Details' sub color='teal'/>\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit,isValid,isSubmitting,dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <CustomTextInput name='title' placeholder='Title' />\r\n            <CustomTextArea rows={3} placeholder=\"Description\" name=\"description\"/>\r\n            <CustomSelectInput options={categoryOptions} placeholder=\"Category\" name=\"category\"/>\r\n            <CustomDateInput  name=\"date\" placeholderText='Date' showTimeSelect\r\n            timeCaption='time' dateFormat='MMMM d, yyyy h:mm aa' />\r\n      <Header content='Location Details' sub color='teal'/>\r\n\r\n            <CustomTextInput placeholder=\"City\" name=\"city\"/>\r\n            <CustomTextInput placeholder=\"Venue\" name=\"venue\"/>\r\n            <Button\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              disabled={!isValid||isSubmitting|| !dirty}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              as={Link}\r\n              to={\"/activities\"}\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n}\r\n\r\n\r\nexport default observer(ActivityForm);\r\n\r\n//<FormField>\r\n//<Field placeholder=\"Title\" name=\"title\" />\r\n//<ErrorMessage name='title' render={\r\n//  error=><Label basic color='red' style={{marginTop:5}} content={error} />\r\n//} />\r\n//</FormField>\r\n\r\n  // const handleInputChange = (event:React.FormEvent<HTMLInputElement|HTMLTextAreaElement>)=>{\r\n  //    const {name,value} = event.currentTarget;\r\n  //   setActivity({\r\n  //     ...activity,\r\n  //     [name]:value\r\n  //   })\r\n  // }","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\nimport {Field, FieldProps, Form, Formik} from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { formatDistanceToNow } from 'date-fns/esm'\r\n\r\n\r\ninterface Props{\r\n    activityId : string\r\n}\r\n\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}:Props) {\r\n\r\n    const {commentStore}=  useStore();\r\n\r\n    useEffect(()=>{\r\n        if(activityId){\r\n            commentStore.createHubConnection(activityId);\r\n\r\n        }\r\n        return ()=>commentStore.clearComments();\r\n    }, [commentStore,activityId])\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n                className=\"commentSectionHeader tealHeader\"\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing className=\"commentSectionContent\">\r\n                <Comment.Group>\r\n                   \r\n                    {commentStore.comments.map(comment=>\r\n                         <Comment key={comment.id}>\r\n                         <Comment.Avatar as={Link} to={`/profiles/${comment.username}`} src={comment.image||'/assets/user.png'}/>\r\n                         <Comment.Content>\r\n                             <Comment.Author as='a'>{comment.displayName}</Comment.Author>\r\n                             <Comment.Metadata>\r\n                                 <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                             </Comment.Metadata>\r\n                             <Comment.Text style={{whiteSpace:'pre-wrap'}} >{comment.body}</Comment.Text>\r\n                             {/* <Comment.Actions>\r\n                                 <Comment.Action>Reply</Comment.Action>\r\n                             </Comment.Actions> */}\r\n                         </Comment.Content>\r\n                     </Comment>)}\r\n\r\n                    <Formik \r\n                    onSubmit={(values:any,{resetForm})=>commentStore.addComment(values).then(()=>resetForm())} \r\n                    initialValues={{body:''}}\r\n                    validationSchema={Yup.object({\r\n                        body:Yup.string().required(\"Comment can not be posted empty\")\r\n                    })}\r\n                    >\r\n                   {({ isSubmitting, isValid,handleSubmit }) => (\r\n                <Form className=\"ui form\">\r\n                  <Field name='body'>\r\n                    {(props:FieldProps)=>(\r\n                         <div style={{position:'relative'}} >\r\n                         <Loader active={isSubmitting} />\r\n                         <textarea placeholder='Enter your comment (Enter to submit, SHIFT+enter for new line)'\r\n                             rows={2}\r\n                             {...props.field} // anything related to onblur and such\r\n                             onKeyPress={\r\n                                 e=>{\r\n                                     if(e.key === 'Enter'  && e.shiftKey){\r\n                                         return;\r\n                                     }\r\n                                     if(e.key==='Enter' && !e.shiftKey){\r\n                                         e.preventDefault();\r\n                                         isValid&&handleSubmit();\r\n                                     }\r\n                                 }\r\n                             }\r\n                         />\r\n\r\n                     </div>\r\n                    )}\r\n                  </Field>\r\n                </Form>\r\n              )}            \r\n                    </Formik>\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n    ","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n\r\n    const {activityStore:{updateAttendance, loading,cancelActivityToggle}} = useStore();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {\r\n                    activity.isCancelled && <Label style={{position:'absolute', zIndex:1000, left:-14, top:20}} ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!,'dd MMM yyyy h:mm aa')}</p>\r\n                                <p>\r\n                                    Hosted by <strong>{activity.host?.displayName}</strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost? ( \r\n                    <>\r\n                <Button color={activity.isCancelled?'green':'red'}\r\n                    floated='left' basic\r\n                    content={activity.isCancelled?'Activate Activity':'Cancel Activity'}\r\n                    onClick={cancelActivityToggle}\r\n                    loading={loading}\r\n                />\r\n                <Button as={Link}  to={`/manage/${activity.id}`} color='orange' floated='right' disabled={activity.isCancelled}>\r\n                    Manage Event\r\n                </Button>\r\n                    </>\r\n\r\n                ) : activity.isGoing? \r\n                <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>: \r\n                <Button loading={loading} disabled={activity.isCancelled} onClick={updateAttendance} color='teal'>Join Activity</Button>}\r\n              \r\n               \r\n             \r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n\r\n\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity }: Props) {\r\n \r\n    if(!activity.attendees) return null;\r\n    return (\r\n    <>\r\n      <Segment\r\n      className=\"tealHeader\"\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {activity.attendees.length} {activity.attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached className=\"detailedSidebar\" >\r\n        <List relaxed divided>\r\n          {activity.attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username===activity.hostUsername && <Label\r\n                style={{ position: \"absolute\" }}\r\n                color=\"orange\"\r\n                ribbon=\"right\"\r\n              >\r\n                Host\r\n              </Label>}\r\n              <Image size=\"tiny\" src={attendee.image||\"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                </Item.Header>\r\n              {attendee.isFollowing&&\r\n                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/loadingComponent/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\n function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const { selectedActivity, loadActivity,loadingInitial,clearSelectedActivity } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id);\r\n    }\r\n    return ()=>clearSelectedActivity();\r\n  }, [id, loadActivity,clearSelectedActivity]);\r\n\r\n  if(loadingInitial || !selectedActivity) return <LoadingComponent/>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={selectedActivity}/>\r\n        <ActivityDetailedInfo activity={selectedActivity}/>\r\n        <ActivityDetailedChat activityId={selectedActivity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={selectedActivity}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetails);","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl =  process.env.REACT_APP_API_URL;\r\n\r\n    const [errors, setErrors] = useState(null);\r\n\r\n\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors&& <ValidationErrors errors={errors}/>}\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Icon, Button } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\"/>\r\n        Oops- We have looked everywhere and could not find this         \r\n      </Header>\r\n      <Segment.Inline>\r\n          <Button as={Link} to='/activities' primary content='Return to Activities' />\r\n      </Segment.Inline>\r\n    </Segment>\r\n\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nfunction ServerError() {\r\n    const {commonStore} = useStore();\r\n\r\n    return (\r\n        <Container>\r\n            <Header as='h1'  content='Server Error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stactk trace' color='teal' />\r\n                    <code style={{marginTop:'10px'}}>{commonStore.error?.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default observer(ServerError);","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nfunction ModalContainer() {\r\n\r\n    const {modalStore} = useStore();    \r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini' >\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default observer(ModalContainer);","import { Form, Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport CustomTextArea from '../../app/common/form/CustomTextArea'\r\nimport CustomTextInput from '../../app/common/form/CustomTextInput'\r\nimport * as Yup from 'yup';\r\nimport { ProfileFormValues } from '../../app/models/profile'\r\nimport { store, useStore } from '../../app/stores/store'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\n\r\ninterface Props{\r\n  setEditForm:(editForm:boolean)=>void;\r\n}\r\n\r\n function ProfileEditForm({setEditForm}:Props) {\r\n\r\n    const [profileForm, setProfileForm] = useState<ProfileFormValues>(new ProfileFormValues({displayName:\"\",bio:undefined}))\r\n    const {profileStore} = useStore();\r\n\r\n    useEffect(()=>{\r\n        if(store.profileStore.profile&&store.userStore.user){\r\n            setProfileForm(new ProfileFormValues({\r\n                displayName:store.profileStore.profile.displayName,\r\n                bio:store.profileStore.profile.bio?store.profileStore.profile.bio:undefined,\r\n            }))\r\n        }\r\n    },[])\r\n\r\n    const handleFormSubmit =(values:ProfileFormValues) => {\r\n      profileStore.updateProfile(values).then(()=>setEditForm(false));\r\n      \r\n    }\r\n    \r\n    return (\r\n        <Formik\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required(\"Display Name can not be empty\"),\r\n            bio :Yup.string().nullable()\r\n        })}\r\n        enableReinitialize\r\n        initialValues={profileForm}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit,isValid,isSubmitting,dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <CustomTextInput name='displayName' placeholder='Display Name' />\r\n            <CustomTextArea rows={3} placeholder=\"Bio\" name=\"bio\"/>\r\n           \r\n            <Button\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              disabled={!isValid||isSubmitting|| !dirty}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              onClick={()=>setEditForm(false)}\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    )\r\n}\r\n\r\nexport default  observer(ProfileEditForm);","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Header, Item, Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\ninterface Props {\r\n  profile: Profile | null;\r\n}\r\n\r\n\r\nfunction ProfileAbout({ profile }: Props) {\r\n\r\nconst [editForm, setEditForm] = useState<boolean>(false);\r\n\r\nconst {profileStore, userStore} = useStore();\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n              <Header icon=\"image\" content={`About ${profile?.displayName}`} floated='left' />\r\n              </Item.Content>\r\n            </Item>\r\n           \r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          {profileStore.profile?.username===userStore.user?.username&&\r\n          <Button content={editForm?\"Cancel\":\"Edit Profile\"} onClick={()=>setEditForm(!editForm)} floated=\"right\" basic />\r\n        }\r\n        </Grid.Column>\r\n        <Grid.Column width={16} >\r\n        <Item>\r\n              {editForm?\r\n              <ProfileEditForm setEditForm={setEditForm} />:<Item.Content style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</Item.Content>}\r\n            </Item>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n}\r\nexport default observer(ProfileAbout);\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingUserActivities,\r\n    userActivities,\r\n  } = profileStore;\r\n\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingUserActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.createdAt), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.createdAt), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\ninterface Props{\r\n    predicate:string\r\n}\r\n\r\nfunction ProfileFollowings({predicate}:Props) {\r\n  const {\r\n    profileStore: { profile, followings, loadFollowings, loadingFollowings },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n      loadFollowings(predicate)\r\n  }, [loadFollowings,predicate])\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={predicate===\"followers\"?`People following ${profile?.displayName}`:`People  ${profile?.displayName} follows`}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\" >\r\n            <Card.Group itemsPerRow=\"4\" >\r\n                {followings.map(profile=>\r\n                    <ProfileCard profile={profile} key={profile.username} />\r\n                    )}\r\n            </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileFollowings);\r\n","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props{\r\n  setFiles:(files:any)=>void;\r\n}\r\n\r\nfunction PhotoWidgetDropzone({setFiles}:Props) {\r\n\r\n  const dzStyles ={\r\n    border:'dashed 3px #eee',\r\n    borderColor:'#eee',\r\n    borderRadius : 5,\r\n    paddingTop:30,\r\n    textAlign:'center' as 'center',\r\n    height:200\r\n  }\r\n\r\n  const dzActive = {\r\n    borderColor:'green'\r\n  }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n  setFiles(acceptedFiles.map((file:any)=>Object.assign(file, {\r\n   preview:URL.createObjectURL(file)\r\n  })))\r\n\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles,...dzActive}:dzStyles} >\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhotoWidgetDropzone; ","import React from 'react'\r\nimport {Cropper} from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface Props{\r\n    setCropper:(cropper:Cropper)=>void;\r\n    imagePreview:string;\r\n    \r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview,setCropper}:Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height:200,width:'100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            rotatable={true}\r\n            onInitialized={cropper=> setCropper(cropper)}\r\n        />\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\nimport {Cropper} from 'react-cropper';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\n\r\n\r\ninterface Props{\r\n    loading:boolean;\r\n    uploadPhoto:(file:Blob)=>void;\r\n}\r\n\r\n function PhotoUploadWidget({loading,uploadPhoto}:Props) {\r\n\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n\r\n   const onCrop = () => { //for uploading the cropped photo\r\n       if(cropper){\r\n           cropper.getCroppedCanvas().toBlob(blob=>uploadPhoto(blob!))\r\n       }\r\n   }\r\n\r\n   useEffect(()=>{\r\n       return ()=>{\r\n        files.forEach((file:any)=>URL.revokeObjectURL(file.preview));\r\n       };\r\n\r\n       //for getting rid of the memory stream regarding the file upload preview\r\n   },[files])\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width=\"4\">\r\n          <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width=\"4\">\r\n          <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n          {files && files?.length > 0 && (\r\n            <PhotoWidgetCropper\r\n              setCropper={setCropper}\r\n              imagePreview={files[0].preview}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n\r\n        <Grid.Column width=\"4\">\r\n          <Header sub color=\"teal\" content=\"Preview & Upload\" />\r\n          {files && files.length > 0 && (\r\n            <>\r\n              <div\r\n                className=\"img-preview\"\r\n                style={{ minHeight: 200, overflow: \"hidden\" }}\r\n              />\r\n              <Button.Group widths={2} style={{marginBottom:10}}>\r\n                <Button onClick={()=>cropper?.rotate(-90)} positive content='Rotate -90' />\r\n                <Button onClick={()=>cropper?.rotate(90)} positive content='Rotate 90' />\r\n              </Button.Group>\r\n              <Button.Group widths={2}>\r\n                <Button disabled={loading} loading={loading} onClick={onCrop} positive icon=\"check\" />\r\n                <Button onClick={() => setFiles([])} icon=\"close\" />\r\n              </Button.Group>\r\n            </>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n}\r\nexport default observer(PhotoUploadWidget);","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile | null;\r\n}\r\n\r\nfunction ProfilePhotos({ profile }: Props) {\r\n\r\n  const {profileStore:{isCurrentUser, uploadPhoto, uploading,loading,setMainPhoto,deletePhoto}} = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState<boolean>(false);\r\n  const [target,setTarget] = useState('');\r\n\r\n\r\n  const handlePhotoUpload = (file:Blob) => {\r\n    uploadPhoto(file).then(()=>setAddPhotoMode(false));\r\n\r\n  }\r\n\r\n  const handlesetMainPhoto=(photo:Photo,e:SyntheticEvent<HTMLButtonElement>)=>{\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  const handelDeletePhoto =(photo:Photo, e:SyntheticEvent<HTMLButtonElement>) => {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n     <Grid>\r\n       <Grid.Column width={16}>\r\n       <Header icon=\"image\" content=\"Photos\" floated='left' />\r\n      {isCurrentUser && (\r\n        <Button floated='right' basic \r\n        content={addPhotoMode?'cancel':'Add Photo'}\r\n        onClick={()=>setAddPhotoMode(!addPhotoMode)}\r\n        />\r\n      \r\n      )}\r\n       </Grid.Column>\r\n       <Grid.Column width={16} >\r\n          {addPhotoMode?\r\n          (<PhotoUploadWidget uploadPhoto = {handlePhotoUpload} loading={uploading} />):  \r\n          <Card.Group itemsPerRow={5}>\r\n          {profile?.photos?.map((photo) => (\r\n            <Card key={photo.id} >\r\n              <Image src={photo.url || \"/assets/user.png\"} />\r\n              {isCurrentUser&&(\r\n                <Button.Group fluid widths={2}>\r\n                  <Button\r\n                   basic\r\n                   icon='check'\r\n                   color='green'\r\n                   name={photo.id}\r\n                   loading={target===photo.id&&loading}\r\n                   onClick={e=> handlesetMainPhoto(photo,e)}\r\n                   disabled={photo.isMain}\r\n                   />\r\n                  \r\n                  <Button basic color='red' icon='trash'\r\n                   name={'delete-'+photo.id}\r\n                   onClick={(e)=>handelDeletePhoto(photo,e)} \r\n                   loading={loading&&target==='delete-'+photo.id}/>\r\n                </Button.Group>\r\n              )}\r\n            </Card>\r\n          ))}\r\n        </Card.Group>\r\n        }\r\n       </Grid.Column>\r\n     </Grid>\r\n   \r\n    </Tab.Pane>\r\n  );\r\n}\r\nexport default observer(ProfilePhotos);\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Tab } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileActivities from './ProfileActivities'\r\nimport ProfileFollowings from './ProfileFollowings'\r\nimport ProfilePhotos from './ProfilePhotos'\r\n\r\ninterface Props{\r\n    profile:Profile|null\r\n}\r\n\r\nfunction ProfileContent({profile}:Props) {\r\n    const panes =[\r\n            {menuItem:'About', render:()=><ProfileAbout profile={profile}/>},\r\n            {menuItem:'Photos', render:()=><ProfilePhotos profile={profile}/>},\r\n            {menuItem: 'Events', render: () => <ProfileActivities/>},\r\n            {menuItem:'Followers', render:()=><ProfileFollowings predicate=\"followers\" />},\r\n            {menuItem:'Following', render:()=><ProfileFollowings predicate=\"following\" />},\r\n    ]\r\n\r\n    return (\r\n        <Tab menu={{fluid:true, vertical:true}} \r\n            menuPosition='right'\r\n            panes={panes}\r\n        />\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default observer(ProfileContent)","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport {  Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props{\r\n    profile:Profile\r\n}\r\n\r\nfunction ProfileHeader({profile}:Props) {\r\n\r\n\r\n    return (\r\n        <Segment className=\"profileHeader\">\r\n            <Grid>\r\n                <Grid.Column width='12'>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile?.image||'/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle' >\r\n                                <Header as='h1'>{profile?.displayName}</Header>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width='4'>\r\n                    <Statistic.Group widths='2' >\r\n                        <Statistic label='Followers' value={profile?.followersCount}/>\r\n                        <Statistic label='Following' value={profile?.followingsCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                   <FollowButton profile={profile} /> \r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default observer(ProfileHeader);","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../app/layout/loadingComponent/LoadingComponent'\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileContent from './ProfileContent'\r\nimport ProfileHeader from './ProfileHeader'\r\n\r\nfunction ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const {\r\n    profileStore: { loadProfile, loadingProfile, profile, setProfile },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    // return () => {\r\n    //   setProfile(null);\r\n    // };\r\n  }, [loadProfile, username, setProfile]);\r\n\r\n  if (loadingProfile) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"16\">\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default observer(ProfilePage);","import { Container } from \"semantic-ui-react\";\r\nimport Navbar from \"./NavBar\";\r\nimport Activitydashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport LoginForm from \"../../features/users/LoginForm\";\r\nimport { useStore } from \"../stores/store\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingComponent from \"./loadingComponent/LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\n\r\nconst App = () => {\r\n\r\n  const {commonStore, userStore} = useStore();\r\n\r\n  useEffect(()=>{\r\n    if(commonStore.token){\r\n      userStore.getUser().finally(()=>commonStore.setAppLoaded())\r\n    }else{\r\n      commonStore.setAppLoaded();\r\n      userStore.getFacebookLoginStatus().then(()=>commonStore.setAppLoaded).catch(error=>{\r\n        console.log(error);\r\n        commonStore.setAppLoaded();\r\n      });\r\n    }\r\n  },[commonStore, userStore])\r\n \r\n\r\n  if(!commonStore.appLoaded) return <LoadingComponent />  \r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-center\" />\r\n      <ModalContainer/>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <Navbar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n          \r\n                {userStore.isLoggedIn ? \r\n                  <>\r\n                    <Route exact path=\"/activities\" component={Activitydashboard} />\r\n                <Route path=\"/activities/:id\" component={ActivityDetails} />\r\n                <Route\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <Route path=\"/profiles/:username\" component={ProfilePage} />\r\n                <Route exact path=\"/errorHandling\" component={TestErrors} />\r\n                  </>\r\n                  :<Redirect to='/'/>\r\n              }\r\n                <Route path='/server-error' component={ServerError} />\r\n                <Route path='/login' component={LoginForm} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app/layout/styles.css';\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n//For accessing history in non-react components, we create\n//history const. 'history' is part of react-router-dom.\n//And we shall replace <BrowserRouter> with <Router history={history}>\n// </Router> instead. This is the same as BrowserRouter, we just\n// seperate them for our own interests.\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n    <App />\n    </Router >\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}